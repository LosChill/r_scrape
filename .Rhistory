cup_url <- "https://www.racing-reference.info/nascar-cup-series-stats/"
credential <- "Data science student project (tpendras@gmail.com)"
# Extract
response <- GET(url = cup_url, user_agent(credential))
print(response)
# Set query information
cup_url <- "https://www.driveraverages.com/nascar/race.php?sked_id=1995011"
user_agent_string <- "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36"
# Extract
response <- GET(url = cup_url, add_headers(
`User-Agent` = user_agent_string,
Accept = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
`Accept-Language` = "en-US,en;q=0.5",
`Accept-Encoding` = "gzip, deflate, br",
Connection = "keep-alive",
`Upgrade-Insecure-Requests` = "1",
`Cache-Control` = "max-age=0"
))
print(response)
# Transform
cup_html <- read_html(response)
print(cup_df)
cup_df <- cup_html %>%
html_element(".tb") %>%
html_table(header = TRUE)
library("httr")
library("rvest")
library("tibble")
library("dplyr")
library("readr")
setwd("~/Documents/Computing/Projects/r_scrape")
year_races_df <- read_csv('all_cup_seasons.csv')
print(year_races_df)
years <- seq(1949, 2023)
print(years)
num_races <- get_num_races(1987)
get_num_races <- function(year) {
year_races_df %>%
filter(Year == year) %>%
pull(Races) %>%
as.integer()
}
num_races <- get_num_races(1987)
print(num_races)
# Function: Combine year and num_races into string
build_race_year_str <- function(year, num_races)
# Test
race_year_str <- build_race_year_str(1987, num_races)
print(race_year_str)
# Test
race_year_str <- build_race_year_str(1987, num_races)
library("httr")
library("rvest")
library("tibble")
library("dplyr")
library("readr")
year_races_df <- read_csv('all_cup_seasons.csv')
print(year_races_df)
years <- seq(1949, 2023)
print(years)
# Function: Input year, lookup in df, output number of races.
get_num_races <- function(year) {
year_races_df %>%
filter(Year == year) %>%
pull(Races) %>%
as.integer()
}
# Test
num_races <- get_num_races(1987)
print(num_races)
# Function: Combine year and num_races into string
build_race_year_str <- function(year, num_races)
# Function: Combine year and num_races into string
build_race_year_str <- function(year, num_races) {
sprintf("%s%d03", year, num_races)
}
# Test
race_year_str <- build_race_year_str(1987, num_races)
print(race_year_str)
# Function: Combine year and num_races into string
build_race_year_str <- function(year, num_races) {
sprintf("%d%03d3", year, num_races)
}
# Test
race_year_str <- build_race_year_str(1987, num_races)
print(race_year_str)
# Function: Combine year and num_races into string
build_race_year_str <- function(year, num_races) {
sprintf("%d%03d", year, num_races)
}
# Test
race_year_str <- build_race_year_str(1987, num_races)
print(race_year_str)
# Test
races_vector <- build_races_vector(num_races)
# Function: Generate vector of individual races
build_races_vector <- function(num_races) {
seq(1, num_races)
}
# Test
races_vector <- build_races_vector(num_races)
print(races_vector)
# Set url_start
url_start <- "https://www.driveraverages.com/nascar/race.php?sked_id="
# Set url_start
url_start <- "https://www.driveraverages.com/nascar/race.php?sked_id="
# Test
url <- concat_url(url_start, race_year_str)
# Function: Combine url parts with race_year_str
concat_url <- function(url_start, race_year_str)
# Test
url <- concat_url(url_start, race_year_str)
print(url)
# Function: Combine url parts with race_year_str
concat_url <- function(url_start, race_year_str) {
paste(url_start, race_year_str)
}
# Test
url <- concat_url(url_start, race_year_str)
print(url)
# Set year range
years <- seq(1949, 2023)
print(years)
# Set year range
years <- seq(1949, 1952)
# Test
num_races <- get_num_races(years)
print(num_races)
# Function: Input year, lookup in df, output number of races.
get_num_races <- function(year) {
year_races_df %>%
filter(Year == year) %>%
pull(Races) %>%
as.integer()
}
# Test
num_races <- get_num_races(years)
print(num_races)
print(years)
# Function: Create races vector from year range
get_years_vector <- (years) {
# Function: Create races vector from year range
get_years_vector <- function(years) {
year_races_df$Races[match(years, df$Years)]
}
# Set year range
years <- seq(1949, 1952)
# Test
races_vector <- get_races_vector(years)
# Function: Create races vector from year range
get_races_vector <- function(years) {
year_races_df$Races[match(years, df$Years)]
}
# Test
races_vector <- get_races_vector(years)
# Set year range
years <- seq(1949, 1952)
print(years)
# Function: Create races vector from year range
get_races_vector <- function(years) {
year_races_df$Races[match(years, df$Years)]
}
# Test
races_vector <- get_races_vector(years)
# Function: Create races vector from year range
get_races_vector <- function(years) {
year_races_df$Races[match(years, df$Year)]
}
# Test
races_vector <- get_races_vector(years)
print(year_races_df)
# Import csv to df
year_races_df <- read_csv('all_cup_seasons.csv', col_types = cols(
Year = integer(),
Races = integer()
))
# Import csv to df
year_races_df <- read_csv('all_cup_seasons.csv', col_types = cols(
Year = col_integer(),
Races = col_integer()
))
# Test df
print(year_races_df)
# Set year range
years <- seq(1949, 1952)
print(years)
# Function: Create races vector from year range
get_races_vector <- function(years) {
year_races_df$Races[match(years, df$Year)]
}
# Test
races_vector <- get_races_vector(years)
# Function: Create races vector from year range
get_races_vector <- function(years) {
year_races_df$Races[match(years, year_races_df$Year)]
}
# Test
races_vector <- get_races_vector(years)
print(num_races)
# Set year range
years <- seq(1949, 1952)
print(years)
# Set url_start
url_start <- "https://www.driveraverages.com/nascar/race.php?sked_id="
# Function: Create races vector from year range
get_races_vector <- function(years, data_frame) {
data_frame$Races[match(years, data_frame$Year)]
}
# Test
races_vector <- get_races_vector(years, year_races_df)
print(num_races)
print(races_vector)
library("httr")
library("rvest")
library("tibble")
library("dplyr")
# Import csv to df
year_races_df <- read_csv('all_cup_seasons.csv', col_types = cols(
Year = col_integer(),
Races = col_integer()
))
## Test df
print(year_races_df)
# Set year range
years <- seq(1949, 1952)
## Test year range
print(years)
# Set url_start
url_start <- "https://www.driveraverages.com/nascar/race.php?sked_id="
## Test url start
print(url_start)
# Function: Create races vector from year range
get_races_vector <- function(years, data_frame) {
data_frame$Races[match(years, data_frame$Year)]
}
## Test get_races_vector
races_vector <- get_races_vector(years, year_races_df)
print(races_vector)
# Function: Generate vector of individual races
build_races_seq_vector <- function(num_races) {
seq(1, num_races)
}
## Test build_races_vector
races_seq_vector <- build_races_seq_vector(races_vector)
## Test build_races_vector
races_seq_vector <- sapply(races_vector, build_races_seq_vector)
print(races_vector)
print(races_seq_vector)
library("httr")
library("rvest")
library("tibble")
library("dplyr")
library("readr")
# Import csv to df
year_races_df <- read_csv('all_cup_seasons.csv', col_types = cols(
Year = col_integer(),
Races = col_integer()
))
## Test df
print(year_races_df)
# Set year range
years <- seq(1949, 1952)
## Test year range
print(years)
# Set url_start
url_start <- "https://www.driveraverages.com/nascar/race.php?sked_id="
## Test url start
print(url_start)
# Function: Create races vector from year range
get_races_vector <- function(years, data_frame) {
data_frame$Races[match(years, data_frame$Year)]
}
## Test get_races_vector
races_vector <- get_races_vector(years, year_races_df)
print(races_vector)
# Function: Generate vector of individual races
build_races_seq_vector <- function(num_races) {
seq(1, num_races)
}
## Test build_races_seq_vector
races_seq_vector <- sapply(races_vector, build_races_seq_vector)
print(races_seq_vector)
print(races_seq_vector)
# Function: Generate vector of individual races
build_races_seq_vector <- function(year, num_races) {
race_seq <- seq(1, num_races)
build_race_year_str(year, race_seq)
}
## Test build_races_seq_vector
races_seq_vector <- build_races_seq_vector(years, races_vector)
library("httr")
library("rvest")
library("tibble")
library("dplyr")
library("readr")
# Import csv to df
year_races_df <- read_csv('all_cup_seasons.csv', col_types = cols(
Year = col_integer(),
Races = col_integer()
))
## Test df
print(year_races_df)
# Set year range
years <- seq(1949, 1952)
## Test year range
print(years)
# Set url_start
url_start <- "https://www.driveraverages.com/nascar/race.php?sked_id="
## Test url start
print(url_start)
# Function: Create races vector from year range
get_races_vector <- function(years, data_frame) {
data_frame$Races[match(years, data_frame$Year)]
}
## Test get_races_vector
races_vector <- get_races_vector(years, year_races_df)
print(races_vector)
# Function: Combine year and num_races into string
build_race_year_str <- function(year, num_races) {
sapply(num_races, function(x) sprintf("%d%03d", year, x))
}
## Test build_race_year_str
race_year_str <- build_race_year_str(1987, num_races)
## Test build_race_year_str
race_year_str <- build_race_year_str(1987, 32)
print(race_year_str)
# Function: Generate vector of individual races
build_races_seq_vector <- function(year, num_races) {
lapply(seq_along(year), function(i) {
race_seq <- seq(1, num_races[i])
build_race_year_str(year[i], race_seq)
})
}
## Test build_races_seq_vector
races_seq_vector <- build_races_seq_vector(years, races_vector)
print(races_seq_vector)
# Function: Generate vector of individual races
build_races_seq_vector <- function(year, num_races) {
lapply(seq_along(year), function(i) {
race_seq <- seq(1, num_races[i])
build_race_year_str(year[i], race_seq) %>% concat_url
})
}
## Test build_races_seq_vector
races_seq_vector <- build_races_seq_vector(years, races_vector)
# Function: Combine url parts with race_year_str
concat_url <- function(url_start, race_year_str) {
paste(url_start, race_year_str)
}
# Function: Combine year and num_races into string
build_race_year_str <- function(year, num_races) {
sapply(num_races, function(x) sprintf("%d%03d", year, x)) %>% concat_url
}
# Set year range
years <- seq(1949, 1952)
# Set url_start
url_start <- "https://www.driveraverages.com/nascar/race.php?sked_id="
# Function: Create races vector from year range
get_races_vector <- function(years, data_frame) {
data_frame$Races[match(years, data_frame$Year)]
}
## Test get_races_vector
races_vector <- get_races_vector(years, year_races_df)
print(races_vector)
# Function: Combine year and num_races into string
build_race_year_str <- function(year, num_races) {
sapply(num_races, function(x) sprintf("%d%03d", year, x)) %>% concat_url
}
## Test build_race_year_str
race_year_str <- build_race_year_str(1987, 32)
## Test build_race_year_str
race_year_str <- build_race_year_str(1987, 32)
# Function: Create races vector from year range
get_races_vector <- function(years, data_frame) {
data_frame$Races[match(years, data_frame$Year)]
}
# Function: Combine year and num_races into string
build_race_year_str <- function(year, num_races, url_start) {
sapply(num_races, function(x) {
race_year_str <- sprintf("%d%03d", year, x)
concat_url(url_start, race_year_str)
})
}
## Test get_races_vector
races_vector <- get_races_vector(years, year_races_df)
# Function: Generate vector of individual races
build_races_seq_vector <- function(year, num_races) {
lapply(seq_along(year), function(i) {
race_seq <- seq(1, num_races[i])
build_race_year_str(year[i], race_seq)
})
}
## Test build_races_seq_vector
races_seq_vector <- build_races_seq_vector(years, races_vector)
# Set url_start
url_start <- "https://www.driveraverages.com/nascar/race.php?sked_id="
# Function: Combine year and num_races into string
build_race_year_str <- function(year, num_races, url_start) {
sapply(num_races, function(x) {
race_year_str <- sprintf("%d%03d", year, x)
concat_url(url_start, race_year_str)
})
}
# Function: Generate vector of individual races
build_races_seq_vector <- function(year, num_races) {
lapply(seq_along(year), function(i) {
race_seq <- seq(1, num_races[i])
build_race_year_str(year[i], race_seq)
})
}
## Test build_races_seq_vector
races_seq_vector <- build_races_seq_vector(years, races_vector)
library("httr")
library("rvest")
library("tibble")
library("dplyr")
library("readr")
# Import csv to df
year_races_df <- read_csv('all_cup_seasons.csv', col_types = cols(
Year = col_integer(),
Races = col_integer()
))
# Set year range
years <- seq(1949, 1952)
# Set url_start
url_start <- "https://www.driveraverages.com/nascar/race.php?sked_id="
# Function: Create races vector from year range
get_races_vector <- function(years, data_frame) {
data_frame$Races[match(years, data_frame$Year)]
}
## Call: Get races_vector
races_vector <- get_races_vector(years, year_races_df)
print(races_vector)
# Function: Combine url parts with race_year_str
concat_url <- function(url_start, race_year_str) {
paste0(url_start, race_year_str)
}
# Function: Combine year and num_races into string
build_race_year_str <- function(year, num_races, url_start) {
sapply(num_races, function(x) {
race_year_str <- sprintf("%d%03d", year, x)
concat_url(url_start, race_year_str)
})
}
# Function: Generate vector of individual races
build_races_seq_vector <- function(year, num_races) {
lapply(seq_along(year), function(i) {
race_seq <- seq(1, num_races[i])
build_race_year_str(year[i], race_seq)
})
}
# Call: build races_seq_vector
races_seq_vector <- build_races_seq_vector(years, races_vector)
library("httr")
library("rvest")
library("tibble")
library("dplyr")
library("readr")
# Import csv to df
year_races_df <- read_csv('all_cup_seasons.csv', col_types = cols(
Year = col_integer(),
Races = col_integer()
))
# Set year range
years <- seq(1949, 1952)
# Set url_start
url_start <- "https://www.driveraverages.com/nascar/race.php?sked_id="
# Function: Create races vector from year range
get_races_vector <- function(years, data_frame) {
data_frame$Races[match(years, data_frame$Year)]
}
## Call: Get races_vector
races_vector <- get_races_vector(years, year_races_df)
print(races_vector)
# Function: Combine url parts with race_year_str
concat_url <- function(url_start, race_year_str) {
paste0(url_start, race_year_str)
}
# Function: Combine year and num_races into string
build_race_year_str <- function(year, num_races, url_start) {
sapply(num_races, function(x) {
race_year_str <- sprintf("%d%03d", year, x)
concat_url(url_start, race_year_str)
})
}
# Function: Generate vector of individual races
build_races_seq_vector <- function(year, num_races, url_start) {
lapply(seq_along(year), function(i) {
race_seq <- seq(1, num_races[i])
build_race_year_str(year[i], race_seq, url_start)
})
}
# Call: build races_seq_vector
races_seq_vector <- build_races_seq_vector(years, races_vector, url_start)
print(races_seq_vector)
source("~/Documents/Computing/Projects/r_scrape/r_scrape03-14-02.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
source("~/Documents/Computing/Projects/r_scrape/r_scrape_010.R", echo=TRUE)
source("~/Documents/Computing/Projects/r_scrape/r_scrape_010.R", echo=TRUE)
source("~/Documents/Computing/Projects/r_scrape/r_scrape_010.R", echo=TRUE)
source("~/Documents/Computing/Projects/r_scrape/r_scrape_010.R", echo=TRUE)
source("~/Documents/Computing/Projects/r_scrape/r_scrape_010.R", echo=TRUE)
source("~/Documents/Computing/Projects/r_scrape/r_scrape_010.R", echo=TRUE)
source("~/Documents/Computing/Projects/r_scrape/r_scrape_010.R", echo=TRUE)
source("~/Documents/Computing/Projects/r_scrape/r_scrape_010.R", echo=TRUE)
